name: dockerfiles setup
on:
  push:
  pull_request:
jobs:
#  docker_scanning:
#    name: Scanning Dockerfile
#    runs:
#      using: 'docker'
#      image: 'Dockerfile'
  check_release_version:
    name: Check release version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.octokit.outputs.tag }}
    steps:
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.actor }}/json_schema_converter
          releases-only: true
        id: octokit
      - run: echo "Octokit is at version ${{ steps.octokit.outputs.tag }}"
  dockerfile_lint:
    name: Dockerfiles linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v2.0.0
        with:
          recursive: true
          verbose: true
          failure-threshold: warning
  docker_scan:
    name: Dockerfile scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
#      - run: sudo apt-get update && sudo apt-get install -y docker-scan-plugin
      - run: |-
          mkdir -p ~/.docker/cli-plugins && \
          curl https://github.com/docker/scan-cli-plugin/releases/latest/download/docker-scan_linux_amd64 -L -s -S -o ~/.docker/cli-plugins/docker-scan &&\
          chmod +x ~/.docker/cli-plugins/docker-scan
      - run: make docker-build
      - run: docker scan --file ./deploy/Dockerfile --dependency-tree schema-generator:latest
  docker_ci:
    name: Docker image CI steps
    needs:
      - check_release_version
      - dockerfile_lint
      - docker_scan
    runs-on: ubuntu-latest
    steps:
      - name: Login to ghcr.io registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - run: echo "Octokit is at version ${{ needs.check_release_version.outputs.tag }}"
      - uses: actions/checkout@v2
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./deploy/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/${{ github.actor }}/schema-generator:${{ needs.check_release_version.outputs.tag }}
          cache-from: type=registry,ref=ghcr.io/${{ github.actor }}/schema-generator:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.actor }}/schema-generator:buildcache,mode=max
      - run: |-
          mkdir -p ~/.docker/cli-plugins && \
          curl https://github.com/docker/scan-cli-plugin/releases/latest/download/docker-scan_linux_amd64 -L -s -S -o ~/.docker/cli-plugins/docker-scan &&\
          chmod +x ~/.docker/cli-plugins/docker-scan
      - run: docker scan --file ./deploy/Dockerfile --dependency-tree ghcr.io/${{ github.actor }}/schema-generator:${{ needs.check_release_version.outputs.tag }}